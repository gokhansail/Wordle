private void VisualizeModel(List<Node> nodeList, List<Element> elementList)
{
    vtkPoints points = vtkPoints.New();
    Dictionary<int, int> nodeIdToPointIndex = new Dictionary<int, int>();

    // ðŸ”¹ 1. Node'larÄ± vtkPoints'e ekle
    foreach (var node in nodeList)
    {
        int idx = points.InsertNextPoint(node.X, node.Y, node.Z);
        nodeIdToPointIndex[node.Id] = idx;
    }

    // ðŸ”¹ 2. UnstructuredGrid oluÅŸtur
    vtkUnstructuredGrid grid = vtkUnstructuredGrid.New();
    grid.SetPoints(points);

    // ðŸ”¹ 3. Elementleri VTK hÃ¼cresine Ã§evirip ekle
    foreach (var element in elementList)
    {
        int vtkCellType;
        int[] nodeOrder;
        GetVTKCellInfo(element.Type, out vtkCellType, out nodeOrder);

        vtkIdList idList = vtkIdList.New();
        foreach (int i in nodeOrder)
        {
            int nodeId = element.NodeIds[i];
            idList.InsertNextId(nodeIdToPointIndex[nodeId]);
        }

        grid.InsertNextCell(vtkCellType, idList);
    }

    // ðŸ”¹ 4. Mapper, Actor, Renderer
    vtkDataSetMapper mapper = vtkDataSetMapper.New();
    mapper.SetInput(grid);

    vtkActor actor = vtkActor.New();
    actor.SetMapper(mapper);
    actor.GetProperty().EdgeVisibilityOn();
    actor.GetProperty().SetEdgeColor(0, 0, 0);
    actor.GetProperty().SetColor(0.85, 0.65, 0.5);

    vtkRenderer renderer = vtkRenderer.New();
    renderer.AddActor(actor);
    renderer.SetBackground(0.1, 0.15, 0.2);

    renderWindowControl.RenderWindow.AddRenderer(renderer);
}
