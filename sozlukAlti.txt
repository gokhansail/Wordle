private void SurfaceSelectElements(int startX, int startY, int endX, int endY)
{
    // 1. Yüzey meshini çıkar
    var geometryFilter = vtkGeometryFilter.New();
    geometryFilter.SetInput(grid);
    geometryFilter.Update();
    var surfaceGrid = geometryFilter.GetOutput();

    // 2. Seçim kutusu uygula (sadece yüzeye)
    var picker = vtkRenderedAreaPicker.New();
    picker.AreaPick(startX, startY, endX, endY, renderer);

    var frustumFilter = vtkExtractSelectedFrustum.New();
    frustumFilter.SetInput(surfaceGrid);
    frustumFilter.SetFrustum(picker.GetFrustum());
    frustumFilter.PreserveTopologyOff();
    frustumFilter.Update();

    var selected = vtkUnstructuredGrid.SafeDownCast(frustumFilter.GetOutput());

    // 3. Orijinal grid'de highlight için scalar array hazırla
    var highlightArray = vtkIntArray.New();
    highlightArray.SetName("Highlight");
    highlightArray.SetNumberOfComponents(1);
    highlightArray.SetNumberOfTuples(grid.GetNumberOfCells());

    for (int i = 0; i < grid.GetNumberOfCells(); i++)
        highlightArray.SetValue(i, 0);

    // 4. Seçilen yüzey hücrelerini işaretle
    var globalIds = selected.GetCellData().GetGlobalIds();
    if (globalIds != null)
    {
        for (int i = 0; i < selected.GetNumberOfCells(); i++)
        {
            int globalId = (int)globalIds.GetComponent(i, 0);
            highlightArray.SetValue(globalId, 1);
        }
    }

    // 5. Grid'e scalarları ata ve görselleştir
    grid.GetCellData().AddArray(highlightArray);
    grid.GetCellData().SetScalars(highlightArray);

    mapper.SetScalarRange(0, 1);
    mapper.SetScalarModeToUseCellData();
    mapper.ScalarVisibilityOn();

    renderWindowControl.RenderWindow.Render();
}
