    public ShadowForm()
    {
        InitializeComponent();
        this.SetStyle(ControlStyles.ResizeRedraw, true); // Formun boyutlandırıldığında yeniden çizilmesini sağlar.
        this.DoubleBuffered = true;  // Titremeyi azaltmak için çift tamponlama yapar.
        this.Padding = new Padding(10); // Gölge için boşluk bırakır.
    }

    protected override void OnPaint(PaintEventArgs e)
    {
        base.OnPaint(e);
        Graphics g = e.Graphics;
        Rectangle rect = new Rectangle(0, 0, this.ClientSize.Width - 1, this.ClientSize.Height - 1);
        int shadowOffset = 5; // Gölgenin uzaklığı
        int borderRadius = 20; // Köşe yarıçapı

        // Arka plan ve gölge alanı için bir yol oluşturun
        GraphicsPath gp = new GraphicsPath();
        gp.AddArc(rect.X, rect.Y, borderRadius, borderRadius, 180, 90);
        gp.AddArc(rect.X + rect.Width - borderRadius, rect.Y, borderRadius, borderRadius, 270, 90);
        gp.AddArc(rect.X + rect.Width - borderRadius, rect.Y + rect.Height - borderRadius, borderRadius, borderRadius, 0, 90);
        gp.AddArc(rect.X, rect.Y + rect.Height - borderRadius, borderRadius, borderRadius, 90, 90);
        gp.CloseFigure();

        // Gölge çizimi için, orijinal dikdörtgeni kaydırın ve gölge efekti uygulayın
        Rectangle shadowRect = rect;
        shadowRect.Offset(shadowOffset, shadowOffset);
        using (PathGradientBrush brush = new PathGradientBrush(gp))
        {
            brush.WrapMode = WrapMode.Clamp;
            Color blendColor = Color.FromArgb(100, Color.Black); // Gölgenin opaklığı ve rengi
            Color[] colorArray = { Color.Transparent, blendColor };
            brush.CenterColor = Color.Transparent;
            brush.SurroundColors = colorArray;
            brush.FocusScales = new PointF(0.8f, 0.8f); // Gölge yoğunluğunu ayarlamak için

            // Gölgeyi çiz
            g.FillPath(brush, gp);
        }

        // Ana formu çiz
        using (Pen pen = new Pen(Color.Gray, 1.5f)) // Ana form kenarlık rengi ve kalınlığı
        {
            g.DrawPath(pen, gp);
        }
    }
}
