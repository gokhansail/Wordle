public static string NormalizeInput(string input)
{
    if (string.IsNullOrEmpty(input))
        return string.Empty;

    // Türkçe karakter dönüşümleri
    Dictionary<char, char> turkishCharMap = new Dictionary<char, char>
    {
        {'ç', 'c'}, {'Ç', 'C'},
        {'ğ', 'g'}, {'Ğ', 'G'},
        {'ı', 'i'}, {'İ', 'I'},
        {'ö', 'o'}, {'Ö', 'O'},
        {'ş', 's'}, {'Ş', 'S'},
        {'ü', 'u'}, {'Ü', 'U'}
    };

    StringBuilder sb = new StringBuilder();

    foreach (char c in input)
    {
        char ch = c;

        // Türkçe karakterse dönüştür
        if (turkishCharMap.ContainsKey(c))
            ch = turkishCharMap[c];

        // ASCII karakter mi?
        if (ch <= 127)
        {
            if (ch == ' ')
                sb.Append('_'); // boşluk yerine _
            else
                sb.Append(ch);  // normal karakter
        }
        // ASCII dışıysa hiç ekleme (ignore)
    }

    return sb.ToString();
}
